!=====================================================
! Test setup of 2D KH setup as in the paper
! See http://amrvac.org/md_doc_par.html for parameters
!=====================================================
! How the problem from the paper was translated here:
! - Domain [0,1] x [0,1]     --> `&meshlist, xprobmin/max`
! - Periodic  BC at x = 0, 1 --> `&boundlist, typeboundary1='periodic'`
! - Slip-free BC at y = 0, 1 --> `&boundlist, typeboundary2='special'`
! - Maximal time $\bar t = 400$ is a bit harder, as they use a scaled time
!   unit of $\delta_0 / u_\infty$ or 1/28. Intuitively, we should thus set
!   `&stoplist, time_max=14.3`, but this does not seem to match (of course,
!   this might be because of the scheme that was used).
!=====================================================
! How to turn off the energy equation:
! &boundlist : change 4 to 3
! &hd_list   : change hd_energy to F
! That's all (other changes happen automagically)
!=====================================================

&filelist
    base_filename = 'SimData/kh2d_'
    autoconvert   = T
    convert_type  = 'vtuBmpi'
    saveprim      = T
/

&savelist
    itsave(1,1) = 0
    itsave(1,2) = 0
    dtsave_log  = 0.1d0
    dtsave_dat  = 0.1d0
/

&stoplist
    time_max = 5.0d0
/

&methodlist
    !! ===================
    !! TIME DISCRETIZATION
    !! Wiki: http://amrvac.org/md_doc_time_discretization.html
    !! Timestepping schemes (see src/mod_advance.t for details)
        !! time_stepper --> time_integrator
        !! "onestep"    --> {"Forward_Euler", "IMEX_Euler", "IMEX_SP"}
        !! "twostep"    --> {"Predictor_Corrector", "RK2_alfa", "ssprk2",
        !!                   "IMEX_Midpoint", "IMEX_Trapezoidal"}
        !! "threestep"  --> {"ssprk3", "RK3_BT", "IMEX_ARS3", "IMEX_232"}
        !! "fourstep"   --> {"ssprk4", "rk4", "jameson"}
        !! "fivestep"   --> {"ssprk5"}
    !! Different timeschemes did not really give very different results
    time_stepper = 'threestep'
    time_integrator = 'ssprk3'

    !! ====================
    !! SPACE DISCRETIZATION
    !! Wiki: http://amrvac.org/md_doc_discretization.html
    !! flux_scheme -- Wiki: http://amrvac.org/md_doc_methods.html
        !! "hll"  : Approximate Riemann solver, most diffusive
        !! "hllc" : Approximate Riemann solver, designed for HD physics
        !! "hlld" : Irrelevant (MHD)
        !! "hllcd": ?? mix of HLLC and TVDLF (latter is used in user-controlled region around
        !!          a point where there is a sign change in flux)
        !! "tvdlf":
        !!      - Diffusive => robust (but might be too diffusive)
        !!      - No Riemann solver thus minimal implementation cost, also the fastest
        !!      - courantpar=0.8 recommended
        !! "tvdmu":
        !!      - 2-step method combining predictor-upwinding from TVDLF and Riemann from TVD 
        !!      - Roe solver, maximal wave info used, but limited to second-order accuracy
        !!      - But: limited to second-order accuracy and not the most efficient metho
        !!      - courantpar=0.8 recommended, can do dimsplit=T or dimsplit=F
        !!      - Linear Riemann solvers might produce non-physical solutions, set typeentropy
        !!        ("yee" => also set entropycoef, "harten" or "powell") to eliminate this.
        !! "tvd"  :
        !!      - One of the most accurate and efficient schemes
        !!      - Comes in different flavors, default is typetvd='roe'
        !!      - Same limiters as for TVDLF and TVDMU but now applied to characteristic waves
        !!      - courantpar=0.8 recommended, only dimsplit=T
        !!      - typeentropy: same remark as for TVDMU
        !! "cd"   : Central differences, only really useful for testing purposes
        !! "fd"   : High order FDM, global Lax-Friedrich flux splitting, not usable with ppm
    !! typeentropy for TVD / TVDMU (for shocks)
        !! "yee"   : Minimum characteristic speed for each wave can be set in entropycoef
        !! "harten": 
        !! "powell": Most powerful entropy fix
    !! typetvd 
        !! "roe"   : Fastest of the 4 upwind types
        !! "yee"   :
        !! "harten":
        !! "sweby" :

    !! limiter -- Wiki: http://amrvac.org/md_doc_limiter.html 
    !! (TODO: add {'superbee' | 'vanleer' | 'albada' | 'mcbeta' | 'cada'})
    !! (TODO: there are actually even more methods on the wiki page linked above)
        !! limiter  | order | notes
        !! -------- | ----- | -----
        !! minmod   |   2   | TVD, rather diffusive, but extremely robust
        !! woodward |   2   | TVD, sharper
        !! koren    |   3   | distinguishes left/right interpolations, even better than woodward
        !! ppm      |   3   | 4 ghost cells, piecewise parabolic reconstruction
        !! cada3    |   3   | 2 ghost cells, also known as LIMO3
        !! mp5      |   5   | TODO

    !! 20 = nlevelshi; the maximum number of levels in the grid refinement
    flux_scheme = 20*'tvdlf'      ! Point 7 
    limiter     = 20*'woodward' ! Point 6 
    typetvd     = 'roe'         ! Point 7

    !! typeaverage (only for adiabatic hd): type of average used in Roe solver ("roe"/"arithmetic")
    !typeaverage = 'arithmetic' ! when using TVDMU (otherwise error)

    !dimsplit    = T ! Only for TVD
    !typepred1 should not really be set
/

&boundlist
    !! 4 variables in this order: (rho,m1,m2,p)
    !! Left and right: periodic boundaries
    typeboundary_min1 = 4*'periodic'
    typeboundary_max1 = 4*'periodic'
    !! Bottom and top: free-slip boundaries
    typeboundary_min2 = 4*'special'
    typeboundary_max2 = 4*'special'
/

&meshlist
    !! ========
    !! AMR LIST
    refine_max_level = 1  ! Point 8
    block_nx1        = 64
    block_nx2        = 64
    domain_nx1       = 256 ! Point 5
    domain_nx2       = 256

    !! Use Lohner's scheme
    !! | val | effect |
    !! | --- | --- |
    !! | 0   | Only user-defined criteria (specialrefine_grid) |
    !! | 1   | Compare previous time level with present values |
    !! | 2   | Lohner's original scheme (discretized weighted second derivative) | 
    !! | 3   | Adapted version of the original Lohner scheme |
    refine_criterion = 0

    !! Weights for the variables, determining their role in the adaptive error estimation.
    !! In order, the (nw+1) weights correspond to:
    !!                   rho,    v1,    v2,     p, omega, grad_omega, usr_var_for_errest
    !w_refine_weight  = 0.0d0, 0.0d0, 0.0d0, 0.0d0, 1.0d0, 0.0d0     , 0.0d0
    !! Alternatively: (but this won't throw an error when pressure is added/removed)
    !w_refine_weight(4) = 1.0d0

    !! Problem dependent threshold in [0,1] (default: 0.1 everywhere) (smaller = more refinement)
    !refine_threshold = 20*1.0d0

    !! When to coarsen the grid (default 1.0d0/8.0d0 is usually good) (bigger = more coarsening)
    !derefine_ratio = 20*0.875d0
    
    !! ===============
    !! PHYSICAL DOMAIN
    xprobmin1 = 0.0d0
    xprobmax1 = 1.0d0
    xprobmin2 = 0.0d0
    xprobmax2 = 1.0d0
    !iprob=1
/

&paramlist
    ! If density is very small ==> resulting timestep is very small (due to high sound speed)
    ! => if you want to set top and bot boundary velocity to twice the speed, you might need to
    !    increase the number of slowsteps (not sure if this will fix it tho)
    slowsteps    = 10
    courantpar   = 0.8d0
    typecourant  = 'maxsum'
/

&hd_list
    hd_energy    = T
    hd_viscosity = T
    ! Adiabatic index => guess this is only necessary when solved for energy as well
    hd_gamma     = 1.6666666667d0 ! = default value, doesn't really matter if we set this
/

!======================================================================
! PARAMETERS OF INTEREST
! note: rho_0 is always set to 1.0d0
!
! d0    : initial vorticity thickness
! Re    : Reynolds number of the fluid, Re = (rho_0*uinf*delta0)/vc_mu
! Ma    : initial Mach number, Ma = v/c_s
! u_inf : amplitude of initial velocity profile
!======================================================================

&usr_list
    d0    = 0.0357d0
    Re    = 1.0d4
    Ma    = 0.5d0
    u_inf = 1.0d0
/  
